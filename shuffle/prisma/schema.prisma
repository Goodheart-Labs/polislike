generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Statement {
  id                Int                  @id @unique @default(autoincrement())
  poll_id           Int
  user_id           String?
  edited_from_id    Int?
  session_id        String?              @db.VarChar
  reporting_type    reporting_type_enum? @default(default)
  author_name       String?
  author_avatar_url String?
  text              String
  created_at        DateTime             @default(now()) @db.Timestamptz(6)
  poll              polls                @relation(fields: [poll_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  flaggedStatements FlaggedStatement[]
  responses         responses[]
  editedFrom        Statement?           @relation("statementHistory", fields: [edited_from_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  editedTo          Statement[]          @relation("statementHistory")
}

model FlaggedStatement {
  id          Int       @id @unique @default(autoincrement())
  statementId Int
  user_id     String?
  session_id  String    @db.VarChar
  reason      String?
  created_at  DateTime  @default(now()) @db.Timestamptz(6)
  statement   Statement @relation(fields: [statementId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model polls {
  id                Int                   @id @unique @default(autoincrement())
  user_id           String?
  slug              String?               @unique @db.VarChar
  title             String                @db.VarChar
  core_question     String
  created_at        DateTime              @default(now()) @db.Timestamptz(6)
  visibility        polls_visibility_enum @default(public)
  analytics_filters Json                  @default("{}")
  statements        Statement[]
}

enum choice_enum {
  agree
  disagree
  skip
  itsComplicated
}

model responses {
  id          Int         @id @unique @default(autoincrement())
  user_id     String?
  statementId Int
  session_id  String      @db.VarChar
  choice      choice_enum
  created_at  DateTime    @default(now()) @db.Timestamptz(6)
  statement   Statement   @relation(fields: [statementId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

enum polls_visibility_enum {
  public
  hidden
  private
}

enum reporting_type_enum {
  default
  demographic
}
